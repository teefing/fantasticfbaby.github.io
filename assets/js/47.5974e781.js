(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{535:function(e,v,_){"use strict";_.r(v);var t=_(3),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"hexo-github-搭建属于自己的博客"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#hexo-github-搭建属于自己的博客"}},[e._v("#")]),e._v(" HEXO+Github,搭建属于自己的博客")]),e._v(" "),_("p",[e._v("hexo是一款基于Node.js的静态博客框架, hexo github链接 ,这篇教程是针对与Mac的，参考链接，由于原文讲到的hexo是以前的老版本，所以现在的版本配置的时候会有些改动。")]),e._v(" "),_("h2",{attrs:{id:"配置环境"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置环境"}},[e._v("#")]),e._v(" 配置环境")]),e._v(" "),_("p",[e._v("安装Node（必须）")]),e._v(" "),_("p",[e._v("作用：用来生成静态页面的")]),e._v(" "),_("p",[e._v("到Node.js官网下载相应平台的最新版本，一路安装即可。")]),e._v(" "),_("p",[e._v("安装Git（必须）")]),e._v(" "),_("p",[e._v("作用：把本地的hexo内容提交到github上去.")]),e._v(" "),_("p",[e._v("安装Xcode就自带有Git，我就不多说了。")]),e._v(" "),_("p",[e._v("申请GitHub（必须）")]),e._v(" "),_("p",[e._v("作用：是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。")]),e._v(" "),_("p",[e._v("github账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，SSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，配置了就不需要了，怎么配置我就不多说了，网上有很多教程。")]),e._v(" "),_("h2",{attrs:{id:"正式安装hexo"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正式安装hexo"}},[e._v("#")]),e._v(" 正式安装Hexo")]),e._v(" "),_("p",[e._v("Node和Git都安装好后,首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。")]),e._v(" "),_("p",[e._v("执行如下命令安装Hexo：")]),e._v(" "),_("p",[_("strong",[e._v("sudo npm install -g hexo")])]),e._v(" "),_("p",[e._v("初始化然后，执行init命令初始化hexo,命令：")]),e._v(" "),_("p",[_("strong",[e._v("hexo init")])]),e._v(" "),_("p",[e._v("好啦，至此，全部安装工作已经完成！blog就是你的博客根目录，所有的操作都在里面进行。")]),e._v(" "),_("p",[e._v("生成静态页面")]),e._v(" "),_("p",[_("strong",[e._v("hexo generate")]),e._v("（hexo g也可以）")]),e._v(" "),_("p",[e._v("本地启动")]),e._v(" "),_("p",[e._v("启动本地服务，进行文章预览调试，命令：")]),e._v(" "),_("p",[e._v("hexo server")]),e._v(" "),_("p",[e._v("浏览器输入http://localhost:4000")]),e._v(" "),_("p",[e._v("我不知道你们能不能，反正我不能，因为我还有环境没配置好")]),e._v(" "),_("h2",{attrs:{id:"配置github"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置github"}},[e._v("#")]),e._v(" 配置Github")]),e._v(" "),_("p",[e._v("建立Repository")]),e._v(" "),_("p",[e._v("建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法")]),e._v(" "),_("p",[e._v("然后建立关联，我的blog在本地/Users/leopard/blog，blog是我之前建的东西也全在这里面，有：")]),e._v(" "),_("p",[e._v("_config.yml    node_modules    public      source")]),e._v(" "),_("p",[e._v("db.json        package.json    scaffolds  themes")]),e._v(" "),_("p",[e._v("现在我们需要_config.yml文件，来建立关联，命令：")]),e._v(" "),_("p",[_("strong",[e._v("vim _config.yml")])]),e._v(" "),_("p",[e._v("翻到最下面，改成我这样子的")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[e._v("    deploy:\n\n        type: git\n\n        repo: https://github.com/leopardpan/leopardpan.github.io.git**\n\n        branch: master\n")])])]),_("p",[e._v("然后执行命令：")]),e._v(" "),_("p",[_("strong",[e._v("npm install hexo-deployer-git --save")])]),e._v(" "),_("p",[e._v("网上会有很多说法，有的type是github, 还有repository最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。")]),e._v(" "),_("p",[e._v("忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。")]),e._v(" "),_("p",[e._v("然后，执行配置命令：")]),e._v(" "),_("p",[_("strong",[e._v("hexo deploy")])]),e._v(" "),_("p",[e._v("然后再浏览器中输入http://leopardpan.github.io/就行了，我的github的账户叫leopardpan,把这个改成你github的账户名就行了")]),e._v(" "),_("p",[e._v("部署步骤")]),e._v(" "),_("p",[e._v("每次部署的步骤，可按以下三步来进行。")]),e._v(" "),_("p",[e._v("hexo clean")]),e._v(" "),_("p",[e._v("hexo generate")]),e._v(" "),_("p",[e._v("hexo deploy")]),e._v(" "),_("p",[e._v("一些常用命令：")]),e._v(" "),_("p",[_("strong",[e._v('hexo new"postName"')]),e._v(" #新建文章")]),e._v(" "),_("p",[_("strong",[e._v('hexo new page"pageName"')]),e._v(" #新建页面")]),e._v(" "),_("p",[_("strong",[e._v("hexo generate")]),e._v(" #生成静态页面至public目录")]),e._v(" "),_("p",[_("strong",[e._v("hexo server")]),e._v(" #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）")]),e._v(" "),_("p",[_("strong",[e._v("hexo deploy")]),e._v(" #将.deploy目录部署到GitHub")]),e._v(" "),_("p",[_("strong",[e._v("hexo help")]),e._v(" # 查看帮助")]),e._v(" "),_("p",[_("strong",[e._v("hexo version")]),e._v(" #查看Hexo的版本")]),e._v(" "),_("h2",{attrs:{id:"报错总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#报错总结"}},[e._v("#")]),e._v(" 报错总结")]),e._v(" "),_("p",[_("strong",[e._v("ERROR Deployer not found: git")]),e._v(" 或者 "),_("strong",[e._v("ERROR Deployer not found: github")])]),e._v(" "),_("p",[_("strong",[e._v("解决方法： npm install hexo-deployer-git --save")])]),e._v(" "),_("p",[e._v("如发生报错： "),_("strong",[e._v("ERROR Process failed: layout/.DS_Store")]),e._v(" , 那么进入主题里面layout和_partial目录下，使用删除命令：")]),e._v(" "),_("p",[_("strong",[e._v("rm-rf.DS_Store")])]),e._v(" "),_("p",[e._v("ERROR Plugin load failed: hexo-server")]),e._v(" "),_("p",[e._v("原因：")]),e._v(" "),_("p",[e._v("Besides,utilities are separated into a standalone module.hexo.util is not reachable anymore.")]),e._v(" "),_("p",[e._v("解决方法，执行命令：")]),e._v(" "),_("p",[e._v("sudo npm install hexo-server")]),e._v(" "),_("p",[e._v("执行命令hexo server，提示：Usage: hexo ....")]),e._v(" "),_("p",[e._v("原因：")]),e._v(" "),_("p",[e._v("我认为是没有生成本地服务")]),e._v(" "),_("p",[e._v("解决方法，执行命令：")]),e._v(" "),_("p",[e._v("npm install hexo-server --save")]),e._v(" "),_("p",[e._v("提示：hexo-server@0.1.2 node_modules/hexo-server")]),e._v(" "),_("p",[e._v("....")]),e._v(" "),_("p",[e._v("表示成功了参考")]),e._v(" "),_("p",[e._v("这个时候再执行：")]),e._v(" "),_("p",[e._v("hexo-server")]),e._v(" "),_("p",[e._v("得到:")]),e._v(" "),_("p",[e._v("INFOHexois running at http://0.0.0.0:4000/.PressCtrl+C to stop.")]),e._v(" "),_("p",[e._v("这个时候再点击http://0.0.0.0:4000，正常情况下应该是最原始的画面，但是我看到的是：")]),e._v(" "),_("p",[e._v("白板和Cannot GET / 几个字")]),e._v(" "),_("p",[e._v("原因：")]),e._v(" "),_("p",[e._v("由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：")]),e._v(" "),_("p",[e._v("npm install hexo-renderer-ejs --save")]),e._v(" "),_("p",[e._v("npm install hexo-renderer-stylus --save")]),e._v(" "),_("p",[e._v("npm install hexo-renderer-marked --save")]),e._v(" "),_("p",[e._v("这个时候再重新生成静态文件，命令：")]),e._v(" "),_("p",[e._v("hexo generate（或hexo g）")]),e._v(" "),_("p",[e._v("启动本地服务器：")]),e._v(" "),_("p",[e._v("hexo server（或hexo s）")]),e._v(" "),_("p",[e._v("再，点击网址http://0.0.0.0:4000OK终于可以看到属于你自己的blog啦，😄，虽然很简陋，但好歹有了一个属于自己的小窝了。参考链接，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。")]),e._v(" "),_("h2",{attrs:{id:"主题推荐"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主题推荐"}},[e._v("#")]),e._v(" 主题推荐")]),e._v(" "),_("p",[e._v("这里有大量的主题列表使用方法里面")]),e._v(" "),_("p",[e._v("都有详细的介绍，我就不多说了。")]),e._v(" "),_("p",[e._v("我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美，😄")]),e._v(" "),_("p",[e._v("Cover- A chic theme with facebook-like cover photo")]),e._v(" "),_("p",[e._v("Oishi- A white theme based on Landscape plus and Writing.")]),e._v(" "),_("p",[e._v("Sidebar- Another theme based on Light with a simple sidebar")]),e._v(" "),_("p",[e._v("TKL- A responsive design theme for Hexo. 一个设计优雅的响应式主题")]),e._v(" "),_("p",[e._v("Tinnypp- A clean, simple theme based on Tinny")]),e._v(" "),_("p",[e._v("Writing- A small and simple hexo theme based on Light")]),e._v(" "),_("p",[e._v("Yilia- Responsive and simple style 优雅简洁响应式主题，我用得就是这个。")]),e._v(" "),_("p",[e._v("Pacman voidy- A theme with dynamic tagcloud and dynamic snow")]),e._v(" "),_("p",[e._v("一些基本路径")]),e._v(" "),_("p",[e._v("文章在source/_posts, 文章支持Markdown语法，可以使用一些MarkDown渲染工具。如果想修改头像可以直接在主题的_config.yml文件里面修改，友情链接，之类的都在这里。开始打理你的博客吧，有什么问题或者建议，都可以提出来，我会继续完善的。")]),e._v(" "),_("h2",{attrs:{id:"修改头像"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修改头像"}},[e._v("#")]),e._v(" 修改头像")]),e._v(" "),_("p",[e._v("我当前的路径/Users/leopard/blog/themes/yilia，ls 你可以看到")]),e._v(" "),_("p",[_("strong",[e._v("Gruntfile.js    _config.yml package.json")])]),e._v(" "),_("p",[_("strong",[e._v("README.md  layout      source")])]),e._v(" "),_("p",[e._v("vim _config.yml 进去，找到 #你的头像url avatar: 后接一个URL就行了，头像就修改成功了")]),e._v(" "),_("p",[e._v("修改主题和作者名字")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[e._v("    # Extensions\n\n    ## Plugins: http://hexo.io/plugins/\n\n    ## Themes: http://hexo.io/themes/\n\n    theme:yilia\n")])])]),_("p",[e._v("改成theme: yilia，theme:后面接你自己的主题名字就行了,然后分别执行")]),e._v(" "),_("p",[e._v("部署 "),_("strong",[e._v("hexo g")])]),e._v(" "),_("p",[e._v("提交 "),_("strong",[e._v("hexo d")])]),e._v(" "),_("p",[e._v("你的主题，和名字就修改成功了")]),e._v(" "),_("p",[e._v("链接：http://www.jianshu.com/p/465830080ea9")]),e._v(" "),_("h2",{attrs:{id:"hexo博客图片插入"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#hexo博客图片插入"}},[e._v("#")]),e._v(" HEXO博客图片插入")]),e._v(" "),_("p",[e._v("图片似乎有了解决方案。某次写博客的时候觉得图片多了真是太麻烦了。每次要把图片先上传到七牛的服务器然后再使用。这使我一度出于放弃的边缘，差点用回博客园或者CSND。后面试着搜索了下本地方式引用。发现了CodeFalling/hexo-asset-image的插件来加载本地图片。使用方法")]),e._v(" "),_("p",[e._v("1.首先确认_config.yml 中有 post_asset_folder:true。\nHexo 提供了一种更方便管理 Asset 的设定：post_asset_folder\n当您设置post_asset_folder为true参数后，在建立文件时，Hexo\n会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。")]),e._v(" "),_("p",[e._v("2.在hexo的目录下执行npm install https://github.com/CodeFalling/hexo-asset-image --save（需要等待一段时间）。")]),e._v(" "),_("p",[e._v("3.完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。结构如下：")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[e._v("    本地图片测试\n    ├── apppicker.jpg\n    ├── logo.jpg\n    └── rules.jpg\n    本地图片测试.md\n")])])]),_("p",[e._v("这样的目录结构（目录名和文章名一致），只要使用"),_("img",{attrs:{src:"hexo-build%5Cca61015f.png",alt:""}}),e._v(" 就可以插入图片。其中[]里面不写文字则没有图片标题。\n生成的结构为")]),e._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[e._v("    public/2016/3/9/本地图片测试\n    ├── apppicker.jpg\n    ├── index.html\n    ├── logo.jpg\n    └── rules.jpg\n")])])]),_("p",[e._v("同时，生成的 html 是")]),e._v(" "),_("p",[_("img",{attrs:{src:"hexo-build%5Ce9108ac3.png",alt:""}})]),e._v(" "),_("p",[e._v("而不是愚蠢的")]),e._v(" "),_("p",[_("img",{attrs:{src:"hexo-build%5Cdd8b59fe.png",alt:""}})]),e._v(" "),_("p",[e._v("注意:\n通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo3的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。\n"),_("img",{attrs:{src:"hexo-build%5C661427c8.png",alt:""}})]),e._v(" "),_("p",[e._v("比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 "),_("a",{attrs:{href:"/example.jpg"}}),e._v("，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）")]),e._v(" "),_("p",[e._v("正确的引用图片方式是使用下列的标签插件而不是markdown\n"),_("img",{attrs:{src:"hexo-build%5Cdc9b5224.png",alt:""}})]),e._v(" "),_("p",[e._v("链接：http://www.jianshu.com/p/c2ba9533088a")])])}),[],!1,null,null,null);v.default=o.exports}}]);