(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{547:function(a,t,r){"use strict";r.r(t);var s=r(3),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://github.com/ryanmcdermott/clean-code-javascript",target:"_blank",rel:"noopener noreferrer"}},[a._v("JS整洁之道"),r("OutboundLink")],1)]),a._v(" "),r("h1",{attrs:{id:"代码整洁之道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码整洁之道"}},[a._v("#")]),a._v(" 代码整洁之道")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://image.teefing.top/daimazhengjiezhidao.png",alt:"代码整洁之道思维导图"}})]),a._v(" "),r("h2",{attrs:{id:"主要思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要思想"}},[a._v("#")]),a._v(" 主要思想")]),a._v(" "),r("h3",{attrs:{id:"测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[a._v("#")]),a._v(" 测试")]),a._v(" "),r("h3",{attrs:{id:"有意义的命名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有意义的命名"}},[a._v("#")]),a._v(" 有意义的命名")]),a._v(" "),r("h3",{attrs:{id:"可重用性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可重用性"}},[a._v("#")]),a._v(" 可重用性")]),a._v(" "),r("h3",{attrs:{id:"体现设计理念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#体现设计理念"}},[a._v("#")]),a._v(" 体现设计理念")]),a._v(" "),r("h3",{attrs:{id:"实体少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实体少"}},[a._v("#")]),a._v(" 实体少")]),a._v(" "),r("h3",{attrs:{id:"依赖关系少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#依赖关系少"}},[a._v("#")]),a._v(" 依赖关系少")]),a._v(" "),r("h3",{attrs:{id:"代码逻辑清晰"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码逻辑清晰"}},[a._v("#")]),a._v(" 代码逻辑清晰")]),a._v(" "),r("h3",{attrs:{id:"分层次"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分层次"}},[a._v("#")]),a._v(" 分层次")]),a._v(" "),r("h3",{attrs:{id:"性能调优"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#性能调优"}},[a._v("#")]),a._v(" 性能调优")]),a._v(" "),r("h2",{attrs:{id:"命名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命名"}},[a._v("#")]),a._v(" 命名")]),a._v(" "),r("h3",{attrs:{id:"要有意义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#要有意义"}},[a._v("#")]),a._v(" 要有意义")]),a._v(" "),r("ul",[r("li",[a._v("除非是单纯用来遍历的变量或者数，否则单独设置一个有意义的变量或者常量")]),a._v(" "),r("li",[a._v("读得出来")]),a._v(" "),r("li",[a._v("可搜索")])]),a._v(" "),r("h3",{attrs:{id:"意义要明确"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#意义要明确"}},[a._v("#")]),a._v(" 意义要明确")]),a._v(" "),r("h3",{attrs:{id:"类class替换复杂的数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类class替换复杂的数据结构"}},[a._v("#")]),a._v(" 类class替换复杂的数据结构")]),a._v(" "),r("h3",{attrs:{id:"命名差异要明显"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命名差异要明显"}},[a._v("#")]),a._v(" 命名差异要明显")]),a._v(" "),r("h3",{attrs:{id:"命名的区分也要有意义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#命名的区分也要有意义"}},[a._v("#")]),a._v(" 命名的区分也要有意义")]),a._v(" "),r("ul",[r("li",[a._v("使用数字系列来区分")]),a._v(" "),r("li",[a._v("使用近义词或者多余词来区分")])]),a._v(" "),r("h3",{attrs:{id:"避免使用编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免使用编码"}},[a._v("#")]),a._v(" 避免使用编码")]),a._v(" "),r("ul",[r("li",[a._v("成员前缀")]),a._v(" "),r("li",[a._v("接口和实现")])]),a._v(" "),r("h3",{attrs:{id:"类名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类名"}},[a._v("#")]),a._v(" 类名")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("类名、对象名使用名词或名词短语")])]),a._v(" "),r("li",[r("p",[a._v("要有明确意义")]),a._v(" "),r("ul",[r("li",[a._v("类名Data")])])])]),a._v(" "),r("h3",{attrs:{id:"方法名使用动词或动词短语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法名使用动词或动词短语"}},[a._v("#")]),a._v(" 方法名使用动词或动词短语")]),a._v(" "),r("ul",[r("li",[a._v("属性访问器get前缀")]),a._v(" "),r("li",[a._v("属性修改器set前缀")]),a._v(" "),r("li",[a._v("断言is前缀")])]),a._v(" "),r("h3",{attrs:{id:"使用语境或者类来定义模块变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用语境或者类来定义模块变量"}},[a._v("#")]),a._v(" 使用语境或者类来定义模块变量")]),a._v(" "),r("h3",{attrs:{id:"使用对领域人士一看就懂的专业名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用对领域人士一看就懂的专业名称"}},[a._v("#")]),a._v(" 使用对领域人士一看就懂的专业名称")]),a._v(" "),r("h2",{attrs:{id:"函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),r("h3",{attrs:{id:"短小"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#短小"}},[a._v("#")]),a._v(" 短小")]),a._v(" "),r("h3",{attrs:{id:"只做好一件事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#只做好一件事"}},[a._v("#")]),a._v(" 只做好一件事")]),a._v(" "),r("ul",[r("li",[a._v("判断是否只做了一件事---没办法继续拆分出函数来")]),a._v(" "),r("li",[a._v("多个步骤在同一个抽象层上")])]),a._v(" "),r("h3",{attrs:{id:"参数最多3个，超过3个使用参数对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参数最多3个，超过3个使用参数对象"}},[a._v("#")]),a._v(" 参数最多3个，超过3个使用参数对象")]),a._v(" "),r("h3",{attrs:{id:"函数名要名副其实"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数名要名副其实"}},[a._v("#")]),a._v(" 函数名要名副其实")]),a._v(" "),r("ul",[r("li",[a._v("不要做\b函数名以外的事情")])]),a._v(" "),r("h3",{attrs:{id:"错误异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误异常"}},[a._v("#")]),a._v(" 错误异常")]),a._v(" "),r("ul",[r("li",[a._v("使用异常代替返回错误码")]),a._v(" "),r("li",[a._v("抽离try/catch代码块")])]),a._v(" "),r("h3",{attrs:{id:"消灭重复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消灭重复"}},[a._v("#")]),a._v(" 消灭重复")]),a._v(" "),r("h2",{attrs:{id:"注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),r("h3",{attrs:{id:"无法用代码来表达意图时才使用注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#无法用代码来表达意图时才使用注释"}},[a._v("#")]),a._v(" 无法用代码来表达意图时才使用注释")]),a._v(" "),r("h3",{attrs:{id:"值得写的注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#值得写的注释"}},[a._v("#")]),a._v(" 值得写的注释")]),a._v(" "),r("ul",[r("li",[a._v("法律信息")]),a._v(" "),r("li",[a._v("无法从代码中可以获得的信息")]),a._v(" "),r("li",[a._v("警示")]),a._v(" "),r("li",[a._v("TODO")]),a._v(" "),r("li",[a._v("解释某个巧妙的地方")])]),a._v(" "),r("h3",{attrs:{id:"要删除的注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#要删除的注释"}},[a._v("#")]),a._v(" 要删除的注释")]),a._v(" "),r("ul",[r("li",[a._v("能够从代码中获取信息的注释")]),a._v(" "),r("li",[a._v("被注释的代码")])]),a._v(" "),r("h2",{attrs:{id:"格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#格式"}},[a._v("#")]),a._v(" 格式")]),a._v(" "),r("h3",{attrs:{id:"垂直方向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#垂直方向"}},[a._v("#")]),a._v(" 垂直方向")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("紧密相关的代码靠近")])]),a._v(" "),r("li",[r("p",[a._v("不紧密相关的代码用空格隔开")])]),a._v(" "),r("li",[r("p",[a._v("同一作用域的变量统统放在顶部")])]),a._v(" "),r("li",[r("p",[a._v("代码太长就要拆分")]),a._v(" "),r("ul",[r("li",[a._v("不仅以函数为单位进行拆分，甚至以类、文件为单位")])])])]),a._v(" "),r("h3",{attrs:{id:"水平方向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#水平方向"}},[a._v("#")]),a._v(" 水平方向")]),a._v(" "),r("ul",[r("li",[a._v("紧密相关事物靠近")]),a._v(" "),r("li",[a._v("不紧密相关的代码用空格隔开")]),a._v(" "),r("li",[a._v("使用空格强调前面的运算符")])]),a._v(" "),r("h3",{attrs:{id:"缩进"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缩进"}},[a._v("#")]),a._v(" 缩进")]),a._v(" "),r("h3",{attrs:{id:"while、for语句体为空"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#while、for语句体为空"}},[a._v("#")]),a._v(" while、for语句体为空")]),a._v(" "),r("h2",{attrs:{id:"错误处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[a._v("#")]),a._v(" 错误处理")]),a._v(" "),r("h3",{attrs:{id:"使用异常而非返回码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用异常而非返回码"}},[a._v("#")]),a._v(" 使用异常而非返回码")]),a._v(" "),r("h3",{attrs:{id:"先写try-catch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#先写try-catch"}},[a._v("#")]),a._v(" 先写try...catch")]),a._v(" "),r("h3",{attrs:{id:"当异常种类较多时打包成一个单独的异常类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#当异常种类较多时打包成一个单独的异常类"}},[a._v("#")]),a._v(" 当异常种类较多时打包成一个单独的异常类")]),a._v(" "),r("h3",{attrs:{id:"使用特例模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用特例模式"}},[a._v("#")]),a._v(" 使用特例模式")]),a._v(" "),r("h3",{attrs:{id:"不返回、传递空值-null、undefined"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不返回、传递空值-null、undefined"}},[a._v("#")]),a._v(" 不返回、传递空值(null、undefined)")]),a._v(" "),r("h2",{attrs:{id:"边界"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边界"}},[a._v("#")]),a._v(" 边界")]),a._v(" "),r("h3",{attrs:{id:"调用外部接口时有所封装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#调用外部接口时有所封装"}},[a._v("#")]),a._v(" 调用外部接口时有所封装")]),a._v(" "),r("ul",[r("li",[a._v("语言本身的接口")]),a._v(" "),r("li",[a._v("外部框架、插件")])]),a._v(" "),r("h3",{attrs:{id:"为未来可能的功能接口留出位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为未来可能的功能接口留出位置"}},[a._v("#")]),a._v(" 为未来可能的功能接口留出位置")]),a._v(" "),r("h3",{attrs:{id:"避免自己系统的代码过度使用第三方代码中的特定信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免自己系统的代码过度使用第三方代码中的特定信息"}},[a._v("#")]),a._v(" 避免自己系统的代码过度使用第三方代码中的特定信息")]),a._v(" "),r("h2",{attrs:{id:"单元测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[a._v("#")]),a._v(" 单元测试")]),a._v(" "),r("h3",{attrs:{id:"在编写生产代码前编写单元测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在编写生产代码前编写单元测试"}},[a._v("#")]),a._v(" 在编写生产代码前编写单元测试")]),a._v(" "),r("h3",{attrs:{id:"可读性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#可读性"}},[a._v("#")]),a._v(" 可读性")]),a._v(" "),r("h3",{attrs:{id:"每个测试一个断言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#每个测试一个断言"}},[a._v("#")]),a._v(" 每个测试一个断言")]),a._v(" "),r("h3",{attrs:{id:"first原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#first原则"}},[a._v("#")]),a._v(" FIRST原则")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Fast快速")]),a._v(" "),r("ul",[r("li",[a._v("测试速度要快")])])]),a._v(" "),r("li",[r("p",[a._v("Independent独立")]),a._v(" "),r("ul",[r("li",[a._v("每个测试独立运行")])])]),a._v(" "),r("li",[r("p",[a._v("Repeatable可重复")]),a._v(" "),r("ul",[r("li",[a._v("可以在任何环境中重复通过")])])]),a._v(" "),r("li",[r("p",[a._v("Self-Validating自足验证")]),a._v(" "),r("ul",[r("li",[a._v("要有布尔值输出")])])]),a._v(" "),r("li",[r("p",[a._v("Timely及时")]),a._v(" "),r("ul",[r("li",[a._v("应该及时编写")])])])]),a._v(" "),r("h2",{attrs:{id:"类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[a._v("#")]),a._v(" 类")]),a._v(" "),r("h3",{attrs:{id:"测试先行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试先行"}},[a._v("#")]),a._v(" 测试先行")]),a._v(" "),r("h3",{attrs:{id:"短小-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#短小-2"}},[a._v("#")]),a._v(" 短小")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("单一权责")])]),a._v(" "),r("li",[r("p",[a._v("类名称应该描述其权责")]),a._v(" "),r("ul",[r("li",[a._v("如果无法为某个类命名精确的名称，那么这个类就太长了")])])])]),a._v(" "),r("h3",{attrs:{id:"保持内聚"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#保持内聚"}},[a._v("#")]),a._v(" 保持内聚")]),a._v(" "),r("h3",{attrs:{id:"依赖于抽象-抽象类-而非具体细节-实现类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#依赖于抽象-抽象类-而非具体细节-实现类"}},[a._v("#")]),a._v(" 依赖于抽象(抽象类)而非具体细节(实现类)")]),a._v(" "),r("p",[r("em",[a._v("XMind: ZEN - Trial Version")])])])}),[],!1,null,null,null);t.default=v.exports}}]);